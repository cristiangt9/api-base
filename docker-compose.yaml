version: "3.7"

services:
    backend-laravel-service:
        build:
            args:
                user: sammy
                uid: 1000
            context: ./docker-files/backend/
            dockerfile: Dockerfile
        restart: on-failure
        env_file: .env
        container_name: backend
        image: backend/${PROJECT_NAME_BACKEND}
        volumes:
          - ./projects/api-base:/app-backend
        ports: 
            - 9000:9000

    # frontend-react:
    #     container_name: frontend
    #     build: 
    #         context: ./docker-files/frontend/
    #         dockerfile: Dockerfile
    #     volumes:
    #         - './projects/frontend-react:/app-frontend'
    #         - '/app/node_modules'
    #     ports:
    #         - 3000:3000
    #     stdin_open: true
    #     environment:
    #         - CHOKIDAR_USEPOLLING=true
    #     command: npm start
        
    db:
        platform: linux/x86_64
        image: mysql:5.7
        container_name: database-todo
        restart: on-failure
        env_file: .env
        environment:
            MYSQL_DATABASE: ${DATABASE}
            MYSQL_ROOT_PASSWORD: ${PASSWORD}
            MYSQL_PASSWORD: ${PASSWORD}
            MYSQL_USER: ${USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./database-mysql:/docker-entrypoint-initdb.d
            - ./database-mysql:/var/lib/mysql:rw
        ports:
            - 33069:3306

    nginx-service:
        image: nginx:1.15-alpine
        restart: on-failure
        env_file: .env
        container_name: laravel-react-nginx
        working_dir: /
        ports:
            - "80:80"
        environment:
            VIRTUAL_HOST: ${VIRTUAL_HOST_FRONTEND} 
        volumes:
            - ./projects/api-base/:/app-backend
            # - ./projects/frontend-react/:/app-frontend
            - ./docker-files/nginx/default.conf:/etc/nginx/conf.d/default.conf